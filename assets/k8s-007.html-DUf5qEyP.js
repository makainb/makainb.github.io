import{_ as s,c as a,a as t,o as n}from"./app-BZ33XHo8.js";const i={};function l(d,e){return n(),a("div",null,e[0]||(e[0]=[t(`<h1 id="关键配置" tabindex="-1"><a class="header-anchor" href="#关键配置"><span>关键配置</span></a></h1><h2 id="kube-proxy改为ipvs" tabindex="-1"><a class="header-anchor" href="#kube-proxy改为ipvs"><span>kube-proxy改为ipvs</span></a></h2><p>查看是iptables 还是ipvs模式</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">curl 127.0.0.1:10249/proxyMode</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在master-01节点执行</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">kubectl edit cm kube-proxy -n kube-system</span>
<span class="line"></span>
<span class="line"># 把mode改为ipvs</span>
<span class="line">mode: ipvs</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更新kube-proxy的pod</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">kubectl patch daemonset kube-proxy -p &quot;{\\&quot;spec\\&quot;:{\\&quot;template\\&quot;:{\\&quot;metadata\\&quot;:{\\&quot;annotations\\&quot;:{\\&quot;date\\&quot;:\\&quot;\`date +&#39;%s&#39;\`\\&quot;}}}}}&quot; -n kube-system</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>kubeadm所有pod的配置路径在 /etc/kubernetes/manifests</p><p>kubelet会自动的重启pod，有探测机制，如果不想等可以执行 systemctl restart kubelet</p><h2 id="污点" tabindex="-1"><a class="header-anchor" href="#污点"><span>污点</span></a></h2><p>kubectl get po -n kube-system -owide</p><p>kubeadm安装后，master节点默认不允许 部署pod，可以通过以下方式打开：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">kubectl describe node -l node-role.kubernetes.io/control-plane= | grep Taints</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>获取 node 名称</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">kubectl get node </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>根据node名称删除污点</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">kubectl taint node k8s-master-03 node-role.kubernetes.io/control-plane:NoSchedule-</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,18)]))}const p=s(i,[["render",l],["__file","k8s-007.html.vue"]]),c=JSON.parse('{"path":"/docs/ops/k8s-007.html","title":"关键配置","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"kube-proxy改为ipvs","slug":"kube-proxy改为ipvs","link":"#kube-proxy改为ipvs","children":[]},{"level":2,"title":"污点","slug":"污点","link":"#污点","children":[]}],"git":{"createdTime":1721147356000,"updatedTime":1721147356000,"contributors":[{"name":"makai","email":"makai3@126.com","commits":1}]},"filePathRelative":"docs/ops/k8s-007.md"}');export{p as comp,c as data};
